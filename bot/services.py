import firebase_admin
from firebase_admin import credentials, firestore
from .config import FIREBASE_KEY_PATH
from datetime import datetime
from google.cloud.firestore_v1 import SERVER_TIMESTAMP, Query

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Firebase –∑ –¥–æ–¥–∞—Ç–∫–æ–≤–æ—é –æ–±—Ä–æ–±–∫–æ—é –ø–æ–º–∏–ª–æ–∫
try:
    cred = credentials.Certificate(FIREBASE_KEY_PATH)
    firebase_admin.initialize_app(cred)
    db = firestore.client()
    print("‚úÖ Firebase —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ")
except Exception as e:
    db = None
    print(f"‚ùå Firebase –Ω–µ –≤–¥–∞–ª–æ—Å—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–≤–∞—Ç–∏: {e}")

# –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –¥–æ–¥–∞—Ç–∫–æ–≤–æ—é –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é
def save_user(user_id, username, goal, height, weight, age):
    if db is None:
        print(f"‚ö† Firebase –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π. –î–∞–Ω—ñ –Ω–µ –∑–±–µ—Ä–µ–∂–µ–Ω–æ –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id}.")
        return

    user_data = {
        "user_id": user_id,
        "username": username,
        "goal": goal,
        "height": height,
        "weight": weight,
        "age": age,
        "registered_at": datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    }
    try:
        db.collection("users").document(str(user_id)).set(user_data)
        print(f"‚úÖ –î–∞–Ω—ñ –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {username} ({user_id}) —É—Å–ø—ñ—à–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –≤ Firestore")
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ –¥–∞–Ω–∏—Ö —É Firestore: {e}")

# –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
def get_user(user_id):
    if db is None:
        print(f"‚ö† Firebase –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π. –ù–µ–º–æ–∂–ª–∏–≤–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id}.")
        return None

    try:
        doc = db.collection("users").document(str(user_id)).get()
        if doc.exists:
            print(f"‚úÖ –î–∞–Ω—ñ –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id} –æ—Ç—Ä–∏–º–∞–Ω–æ")
            return doc.to_dict()
        else:
            print(f"‚ö† –î–∞–Ω—ñ –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
            return None
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: {e}")
        return None

# –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø—Ä–æ–≥—Ä–µ—Å—É —Ç—Ä–µ–Ω—É–≤–∞–Ω—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
def save_workout_progress(user_id, workout, duration):
    if db is None:
        print(f"‚ö† Firebase –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π. –ü—Ä–æ–≥—Ä–µ—Å —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –Ω–µ –∑–±–µ—Ä–µ–∂–µ–Ω–æ –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id}.")
        return

    progress_data = {
        "workout": workout,
        "duration": duration,
        "date": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
        "timestamp": SERVER_TIMESTAMP
    }

    try:
        db.collection("users").document(str(user_id)).collection("workouts").add(progress_data)
        print(f"‚úÖ –ü—Ä–æ–≥—Ä–µ—Å —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id} —É—Å–ø—ñ—à–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω–∏–π —É Firestore")
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ –ø—Ä–æ–≥—Ä–µ—Å—É —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è: {e}")

# –û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ç—Ä–µ–Ω—É–≤–∞–Ω—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
def get_progress(user_id):
    if db is None:
        print(f"‚ö† Firebase –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π. –ù–µ–º–æ–∂–ª–∏–≤–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ–≥—Ä–µ—Å –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id}.")
        return []

    try:
        progress_ref = db.collection("users").document(str(user_id)).collection("workouts")
        progress_docs = progress_ref.order_by("timestamp", direction=Query.DESCENDING).stream()
        progress_list = [doc.to_dict() for doc in progress_docs]
        print(f"‚úÖ –Ü—Å—Ç–æ—Ä—ñ—è —Ç—Ä–µ–Ω—É–≤–∞–Ω—å –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id} –æ—Ç—Ä–∏–º–∞–Ω–∞ (–∑–∞–ø–∏—Å—ñ–≤: {len(progress_list)})")
        return progress_list
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ —ñ—Å—Ç–æ—Ä—ñ—ó —Ç—Ä–µ–Ω—É–≤–∞–Ω—å: {e}")
        return []

def check_achievements(user_id):
    achievements = []
    history = get_progress(user_id)
    count = len(history)
    if count == 5:
        achievements.append("–í–∏ –∑–∞–≤–µ—Ä—à–∏–ª–∏ 5 —Ç—Ä–µ–Ω—É–≤–∞–Ω—å! üî•")
    if count == 10:
        achievements.append("10 —Ç—Ä–µ–Ω—É–≤–∞–Ω—å! –í–∏ –Ω–∞ —à–ª—è—Ö—É –¥–æ —É—Å–ø—ñ—Ö—É! üí™")
    if count == 20:
        achievements.append("20 —Ç—Ä–µ–Ω—É–≤–∞–Ω—å! –í–∏ –ª–µ–≥–µ–Ω–¥–∞! üèÜ")
    return achievements

def get_all_users():
    if db is None:
        print("‚ö† Firebase –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π. –ù–µ–º–æ–∂–ª–∏–≤–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤.")
        return []

    try:
        users = db.collection("users").stream()
        return [u.to_dict() for u in users]
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤: {e}")
        return []
